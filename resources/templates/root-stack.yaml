---
AWSTemplateFormatVersion: 2010-09-09
Description: AWS EKS Reference Architecture Root Stack
Parameters:
  EKSRefArchBucket:
    Description: EKS Reference Architecture assets S3 bucket
    Type: String
    MinLength: 1
  DomainName:
    Description: The domain which will host the EKS Workloads.
    Type: String
  #TODO Make this optional. If not provided, create one
  HostedZoneId:
    Description: The id of an existing hosted zone to use
    Type: String
Resources:
  CrossRegionCfnRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossRegionCfnRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: CfnStackAssumeRole
        PolicyDocument:
          Version: '2012-10-17'
          #TODO We can lock these down more
          Statement:
          - Effect: Allow
            Action: 
            - 'cloudformation:CreateStack'
            - 'cloudformation:UpdateStack'
            - 'cloudformation:DeleteStack'
            - 'cloudformation:DescribeStacks'
            Resource: "*"
          - Effect: Allow
            Action: 
            - 's3:CreateBucket'
            - 's3:DeleteBucket'
            - 's3:DeleteBucket*'
            # This specifically can have the ARN of the bucket for which we grant getObject
            - 's3:GetObject'
            - 's3:PutBucket*'
            Resource: "*"
          - Effect: Allow
            Action: 
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            - 'events:*'
            - 'lambda:AddPermission'
            - 'lambda:RemovePermission'
            Resource: "*"
          - Effect: Allow
            Action: 
            - 'acm:AddTagsToCertificate' # TODO Scope to resource?
            - 'acm:DescribeCertificate' # TODO Scope to resource?
            - 'acm:DeleteCertificate' # TODO Scope to resource
            - 'acm:GetCertificate' # TODO Scope to resource?
            - 'acm:ListCertificates'
            - 'acm:ListTagsForCertificate' # TODO Scope to resource?
            - 'acm:RequestCertificate'
            Resource: "*"
  CrossRegionLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Role: !GetAtt CrossRegionCfnRole.Arn
      Runtime: python3.6
      Timeout: 900
      Code:
        S3Bucket: !Ref EKSRefArchBucket
        S3Key: 'cfn-cross-region.zip'
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref CrossRegionLambda]]
      RetentionInDays: 7 # days    
  Base:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${EKSRefArchBucket}.s3.amazonaws.com/eks-ref-base.yaml
      Parameters:
        EKSRefArchBucket: !Ref EKSRefArchBucket
        CustomDomainName: !Ref DomainName
        CrossRegionStackMakerLambda: !GetAtt CrossRegionLambda.Arn
  AppSite:
    Type: AWS::CloudFormation::Stack
    DependsOn: Base
    Properties:
      TemplateURL: !Sub https://${EKSRefArchBucket}.s3.amazonaws.com/eks-ref-application.yaml
      Parameters:
        AppCertArn: !GetAtt Base.Outputs.AppCertArn
        CustomDomainName: !Ref DomainName
        HostedZoneId: !Ref HostedZoneId
        S3OAIId: !GetAtt Base.Outputs.S3OAIId
        S3OAIUserId: !GetAtt Base.Outputs.S3OAIUserId
  RegSite:
    Type: AWS::CloudFormation::Stack
    DependsOn: Base
    Properties:
      TemplateURL: !Sub https://${EKSRefArchBucket}.s3.amazonaws.com/eks-ref-tenant-management.yaml
      Parameters:
        AppCertArn: !GetAtt Base.Outputs.AppCertArn
        CustomDomainName: !Ref DomainName
        HostedZoneId: !Ref HostedZoneId
        S3OAIId: !GetAtt Base.Outputs.S3OAIId
        S3OAIUserId: !GetAtt Base.Outputs.S3OAIUserId